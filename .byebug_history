quit
params[:user_action]
params[:phone]
params
create_user?(user_action)
user_action
quit
user.errors.full_messages.join(',')
user.errors.full_messages.join
user.errors.full_messages
user.errors
user.valid?
user = new_user
c
Account::User.human_attribute_name(:phone)
quit
Account::User.human_attribute_name(:phone)
quit
user.errors.full_messages.first.sub(' ', "")
user.errors.full_messages.first.chomp
user.errors.full_messages.first.strip(" ")
user.errors.full_messages.first.strip(\" "\)
user.errors.full_messages.first.strip
user.errors.full_messages.to_s.strip
user.errors.full_messages.strip
user.errors.full_messages
user.errors
user.validate
user = new_user
Account::User.model_name.i18n_key
Account::User.i18n_key
Account::User.i18n_scope
Account::User.model_name.namespace
Account::User.human_attribute_name(:phone)
Account::User.model_name.i18n_key
quit
user.errors.full_messages
user.errors
user.validate
user =new_user
Account::User.model_name.i18n_key
Account::User.model_name
attributes_scope
Account::User.human_attribute_name(:phone)
quit
Account::User.model_name
Account::User.modle_name
Account::User.human_attribute_name(:phone)
User.human_attribute_name(:phone)
quit
user.errors.full_messages
user.validate
user = new_user
user.validate
User.human_attribute_name(:phone)
user.errors.full_messages
quit
user.errors.full_messages
user.errors.full_message
user.errors
user.validate
user.errors
user = new_user
User.human_attribute_name(:phone)
 Account::User.human_attribute_name(:phone)
quit
i18n_scope
 Account::User.human_attribute_name(:phone)
quit
User.human_attribute_name(:phone)
Account::User.human_attribute_name(:phone)
Account::User..human_attribute_name(:phone)
user.errors.messages
user.errors.message
user.errors.full_message
user.errors.full_messages
user.errors
user.valid?
user = new_user
user = new_nser
c
user.errors.full_messages
user.errors.full_message
user.errors
user.valid?
user = new_user
c
user.errors.full_messages
user.errors.full_message
user.errors
user.valid?
user = new_user
quit
user.errors
user.valid?
user = new_user
quit
user.errors.details
user.errors.methods
quit
user.errors.full_messages_for(:phone)
$ user.errors.full_messages_for
help
h
Devise.secure_compare("size_1", "size_1")
Devise.secure_compare("size_1", "size_2")
Devise.secure_compare("size_1", "size_f")
a.unpack "C#{a.bytesize}"
a = '.#@123abc'
a.unpack "C#{a.bytesize}"
a = '123abc'
a.unpack "C#{a.bytesize}"
a = 'abc'
a.unpack "C#{a.bytesize}"
a
a = '123'
a = '213'
"213".bytesize
Devise.secure_compare('213', '213')
Devise.secure_compare('213', '321')
Devise.secure_compare(213, 321)
Devise.secure_compare(213, 321_
require 'devise'
nil.match('123')
nil.match('123')_
x
end
else 2
  1
x = if true
test @z
@z
test @z
@z
@z +=1
@z
test @z
@z = 1
x
test x
end
  puts y+=1
def test(y)
end
  y+=1
def test(y)
x =1
185185.19*1.08
185185.19*0.08
185185.19*8%
185185.19*8%=
=185185.19*8%
=
185185.19*8%
$:
$:.
4355-1200
4455.4 + 1200
5000-544.6
quit
show-source Devise::SessionsController
help
h
B.singleton_class
B.inspect
A.inspect
b.inspect
b.instance_class
b.class
A.singleton_class?
A.singleton_class
b.singleton_class?
b.singleton_class
A.class
A.methods.inspect
singleton_class = ( class << foo; self; end )
B.ancestors
A.ancestors
class.methods
end
  puts (self.singleton_class?)
B << class
b.singleton_class?
b.methods.inspect
b.__id__
b
b = B.new
B.singleton_class?
B.__id__
A.__id__
A.class
B.class
class B; end;
class B end;
A.__binding__
A.__id__
A.singleton_class?.__id__
A.singleton_class?
A.name
A.methods.inspect
A.methods
A.class
A
a
module A end;
1229-1156
Time.now.strftime("%F-%c")
Time.now.strftime("%F-%R")
Time.now.strftime("%F%R")
Time.now.strftime("%F")
Time.now.to_r
Time.now.to_i
Time.now.to_ui
Time.now.to_s
Time.now.utc
Time.now.methods.inspect
Time.now.methods
Time.now.to_s
Time.now
1232-1142
764-593
574-519
1324-1201
[1].any?
[].any?
787-751
[1,2].concat([2,3]).uniq
x.uniq
x= [1,2].concat [2,3]
[1,2].concat [2,3].uniq
[1,2].concat [2,3].uni
[1,2].concat [2,3].unique
[1,2].concat [2,3].uniq
[1,2].concat [2,3]
[2,3].max
"JJh6U4EtsE0ztq1602323499".length
"4200000693202010101462364105".length
